<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="complain">
	<select id="ComplainTotalCount1" resultType="_int">
		select count(*) as cnt from complain where Complain_Stauts = 0
	</select>
	<select id="ComplainTotalCount2" resultType="_int">
		select count(*) as cnt from complain where Complain_Stauts != 0
	</select>
	<select id="ComplainSelectList1" parameterType="map"
		resultType="complain">
		select * from
		(select rownum as rnum, n.* from
		(select complain_no as complainNo, member_id as memberId, attacker,
		complain_category as complainCategory, complain_date as complainDate,
		complain_content as complainContent, complain_Stauts as complainStauts
		from complain where complain_Stauts = 0 order by complain_no desc)n)
		where rnum between #{start} and #{end}
	</select>
	<select id="ComplainSelectList2" parameterType="map"
		resultType="complain">
		select * from
		(select rownum as rnum, n.* from
		(select complain_no as complainNo, member_id as memberId, attacker,
		complain_category as complainCategory, complain_date as complainDate,
		complain_content as complainContent, complain_Stauts as complainStauts
		from complain where complain_Stauts != 0 order by complain_no desc)n)
		where rnum between #{start} and #{end}
	</select>
	<select id="ComplainTotalCount3" parameterType="map"
		resultType="_int">
		select count(*) as cnt from complain where Complain_Stauts = 0 and 
		<if test="searchTitle.equals('신고한id')">
			member_id like '%' || #{search} || '%'
		</if>
		<if test="searchTitle.equals('신고당한id')">
			attacker like '%' || #{search} || '%'
		</if>
	</select>
	<select id="ComplainSelectList3" parameterType="map"
		resultType="complain">
		select * from
		(select rownum as rnum, n.* from
		(select complain_no as complainNo, member_id as memberId, attacker,
		complain_category as complainCategory, complain_date as complainDate,
		complain_content as complainContent, complain_Stauts as complainStauts
		from complain where complain_Stauts = 0 and 
		<if test="searchTitle.equals('신고한id')">
			member_id like '%' || #{search} || '%'
		</if>
		<if test="searchTitle.equals('신고당한id')">
			attacker like '%' || #{search} || '%'
		</if>
		order by complain_no desc)n)
		where rnum between #{start} and #{end}
	</select>
	<select id="ComplainTotalCount4" parameterType="map"
		resultType="_int">
		select count(*) as cnt from complain where Complain_Stauts != 0 and 
		<if test="searchTitle.equals('신고한id')">
			member_id like '%' || #{search} || '%'
		</if>
		<if test="searchTitle.equals('신고당한id')">
			attacker like '%' || #{search} || '%'
		</if>
	</select>
	<select id="ComplainSelectList4" parameterType="map"
		resultType="complain">
		select * from
		(select rownum as rnum, n.* from
		(select complain_no as complainNo, member_id as memberId, attacker,
		complain_category as complainCategory, complain_date as complainDate,
		complain_content as complainContent, complain_Stauts as complainStauts
		from complain where complain_Stauts != 0 and 
		<if test="searchTitle.equals('신고한id')">
			member_id like '%' || #{search} || '%'
		</if>
		<if test="searchTitle.equals('신고당한id')">
			attacker like '%' || #{search} || '%'
		</if>
		order by complain_no desc)n)
		where rnum between #{start} and #{end}
	</select>
	<select id="selectOneComplainList" parameterType="_int"
		resultType="complain">
		select complain_no as complainNo, member_id as memberId,
		attacker as attacker,
		complain_category as complainCategory, complain_date as complainDate,
		complain_content as complainContent, complain_filename as complainFilename, complain_Stauts as complainStauts
		from complain
		where complain_no = #{complainNo}
	</select>
	<update id="detailComplainYes" parameterType="_int">
		update complain set complain_Stauts=1 where complain_no = #{complainNo}
	</update>
	<update id="detailComplainNo" parameterType="_int">
		update complain set complain_Stauts=2 where complain_no = #{complainNo}
	</update>
	<insert id="complainInsert" parameterType="complain">
		INSERT INTO COMPLAIN VALUES(COMPLAIN_SEQ.NEXTVAL, #{memberId }, #{attacker}, #{complainCategory},sysdate,#{complainContent},null, default)
	</insert>
	<insert id="complainInsertFile" parameterType="complain">
		INSERT INTO COMPLAIN VALUES(COMPLAIN_SEQ.NEXTVAL, #{memberId }, #{attacker},#{complainCategory},sysdate,   null, #{complainFilename},default)
	</insert>
</mapper>
