<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="book">
	<select id="bookTotalCount" resultType="_int">
		select count(*) as cnt from book
	</select>
	
	<select id="bookTotalCount3" parameterType="map" resultType="_int">
		select count(*) as cnt from book where 
		<if test = "searchTitle.equals('도서이름')">
			book_name like '%' || #{search} || '%'
		</if>
		<if test = "searchTitle.equals('작가')">
			book_writer like '%' || #{search} || '%'
		</if>
		<if test = "searchTitle.equals('출판사')">
			book_publisher like '%' || #{search} || '%'
		</if>
		<if test = "searchTitle.equals('장르')">
			book_category like '%' || #{search} || '%'
		</if>
	</select>
	<select id="selectList1" parameterType="map" resultType="book">
		select * from 
			(select rownum as rnum, n.* from
				(select book_no as bookNo, book_name as bookName, book_writer as bookWriter, book_publisher as bookPublisher, 
				book_category as bookCategory, book_img as bookImg, book_pub_date as bookPubDate, book_status as bookStatus, book_content as bookContent
				from book order by book_no desc)n)
		where rnum between #{start} and #{end}
	</select>
	
	<select id="selectList3" parameterType="map" resultType="book">
		select * from 
			(select rownum as rnum, n.* from
				(select book_no as bookNo, book_name as bookName, book_writer as bookWriter, book_publisher as bookPublisher, 
				book_category as bookCategory, book_img as bookImg, book_pub_date as bookPubDate, book_status as bookStatus, book_content as bookContent
				from book where 
				<if test = "searchTitle.equals('도서이름')">
					book_name like '%' || #{search} || '%'
				</if>
				<if test = "searchTitle.equals('작가')">
					book_writer like '%' || #{search} || '%'
				</if>
				<if test = "searchTitle.equals('출판사')">
					book_publisher like '%' || #{search} || '%'
				</if>
				<if test = "searchTitle.equals('장르')">
					book_category like '%' || #{search} || '%'
				</if>
				order by book_no desc)n)
		where rnum between #{start} and #{end}
	</select>
	<delete id="deleteBookList">
		delete from book where 
		book_no in
		<foreach collection="array" item="arr" separator="," open="(" close=")">
			 #{arr}
		</foreach>
	</delete>
	<select id="selectOneBookList" parameterType="_int" resultType="book">
		select book_no as bookNo,
			book_name as bookName,
			book_writer as bookWriter,
			book_publisher as bookPublisher,
			book_category as bookCategory,
			book_img as bookImg,
			book_pub_date as bookPubDate,
			book_status as bookStatus,
			book_content as bookContent
		from book 
		where book_no = #{bookNoo}
	</select>
	<delete id="selectOneBookDelete" parameterType="_int">
		delete from book where book_no = #{bookNo}
	</delete>
	<select id="checkBookList" parameterType="String" resultType="book">
		select book_name as bookName from book where book_name = #{string}
	</select>
	<insert id="insertBookList">
		insert into book(book_name, book_writer, book_publisher, book_category, book_img, book_pub_date, book_content, book_status, book_no) 
			values <foreach collection="array" item="arr" separator="," open="(" close=", ">
			 			#{arr}
				   </foreach>
				  default, book_seq.nextval) 
	</insert>
</mapper>
