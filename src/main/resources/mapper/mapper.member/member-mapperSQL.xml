<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="member">
	<select id="joinSuccess" parameterType="member">
		insert into member values(member_seq.nextval,#{memberId},#{memberPw},#{memberName},#{memberEmail}
		,#{memberPhone},#{memberCategory1},#{memberCategory2},#{memberCategory3}
		,0,0,sysdate,#{memberNickname})
	</select>
	
	<select id="checkId" parameterType="string" resultType="member">
		select member_id as memberId from member where member_id =#{_parameter}
	</select>
	
	<select id="checkNickname" parameterType="string" resultType="member">
		select member_nickname as memberNickname from member where member_nickname =#{_parameter}
	</select>
	
	<select id="selectOneMember" parameterType="member"	resultType="member">
		select
		member_no as memberNo,
		member_id as memberId,
		member_pw as memberPw,
		member_name as memberName,
		member_email as memberEmail,
		member_phone as memberPhone,
		member_category1 as memberCategory1,
		member_category2 as memberCategory2,
		member_category3 as memberCategory3,
		delay_status as delayStatus,
		complain_status as complainStatus,
		member_nickname as memberNickname,
		enroll_date as enrollDate
		from member
		where member_id=#{memberId}
		and member_pw=#{memberPw}
	</select>
	
	<update id="update" parameterType="member">
		update 
		member set 
		member_name =#{memberName},
		member_phone =#{memberPhone},
		member_email =#{memberEmail},
		member_category1=#{memberCategory1},
		member_category2=#{memberCategory2},
		member_category3=#{memberCategory3}
		where member_id=#{memberId}
	</update>
	
	<delete id="delete" parameterType="String">
		delete from member where member_id = #{memberId}
	</delete>
	
	<!-- 비밀번호 찾기 -->
	<update id="updatePw" parameterType="member">
		update member set member_pw =#{memberPw} where member_id =#{memberId}
	</update>
	<!-- 아이디찾기 -->
	<select id="selectId" parameterType="member" resultType="member">
		select member_id as memberId from member 
		where member_email =#{memberEmail}
		and member_phone =#{memberPhone} 
	</select>
	
	<select id="selectMemberTotalCount" parameterType="map" resultType="_int">	
	select count(*) as cnt from member where
		<if test = "selectColumn.equals('member_id')">
			member_id like '%' || #{search} || '%'
		</if>
		<if test = "selectColumn.equals('member_name')">
			member_name like '%' || #{search} || '%'
		</if>
		<if test = "selectColumn.equals('member_email')">
			member_email like '%' || #{search} || '%'
		</if>
		<if test = "selectColumn.equals('member_nickname')">
			member_nickname like '%' || #{search} || '%'
		</if>
	</select>
	<select id="memberTotalCount" resultType="_int">
		select count(*) as cnt from member
	</select>
	<select id="selectMember" resultType="member">
		select * from 
			(select rownum as rnum, n.* from
				(select
			member_no as memberNo,
			member_id as memberId,
			member_pw as memberPw,
			member_name as memberName,
			member_email as memberEmail,
			member_phone as memberPhone,
			enroll_date as enrollDate,
			member_nickname as memberNickname
		from member order by member_no desc)n)
		where rnum between #{start} and #{end}
	</select>
	<select id="selectMemberList" parameterType="map" resultType="member">
		select * from 
			(select rownum as rnum, n.* from
				(select
			member_no as memberNo,
			member_id as memberId,
			member_pw as memberPw,
			member_name as memberName,
			member_email as memberEmail,
			member_phone as memberPhone,
			enroll_date as enrollDate,
			member_nickname as memberNickname
		from member
		<trim prefix="where">
			<if test="selectColumn.equals('member_id') and search != null">
				member_id like '%' || #{search} || '%'
			</if>
			<if test="selectColumn.equals('member_name') and search != null">
				member_name like '%' || #{search} || '%'
			</if>
			<if test = "selectColumn.equals('member_email') and search != null">
				member_email like '%' || #{search} || '%'
			</if>
			<if test = "selectColumn.equals('member_nickname') and search != null">
				member_nickname like '%' || #{search} || '%'
			</if>
		</trim>	
		<choose>
			<when test="alignTitle=='' and alignStatus==''">
			order by member_no desc)n)
			</when>
			<when test="alignTitle==null and alignStatus==null">
			order by member_no desc)n)
			</when>
			<when test='alignTitle.equals("아이디") and alignStatus=="0"'>
			order by member_id desc)n)
			</when>
			<when test='alignTitle.equals("아이디") and alignStatus=="1"'>
			order by member_id asc)n)
			</when>
			<when test='alignTitle.equals("이름") and alignStatus=="0"'>
			order by member_name desc)n)
			</when>
			<when test='alignTitle.equals("이름") and alignStatus=="1"'>
			order by member_name asc)n)
			</when>
			<when test='alignTitle.equals("이메일") and alignStatus=="0"'>
			order by member_email desc)n)
			</when>
			<when test='alignTitle.equals("이메일") and alignStatus=="1"'>
			order by member_email asc)n)
			</when>
			<when test='alignTitle.equals("전화번호") and alignStatus=="0"'>
			order by member_phone desc)n)
			</when>
			<when test='alignTitle.equals("전화번호") and alignStatus=="1"'>
			order by member_phone asc)n)
			</when>
			<when test='alignTitle.equals("닉네임") and alignStatus=="0"'>
			order by member_nickname asc)n)
			</when>
			<when test='alignTitle.equals("닉네임") and alignStatus=="1"'>
			order by member_nickname desc)n)
			</when>
			<when test='alignTitle.equals("가입일") and alignStatus=="0"'>
			order by enroll_date asc)n)
			</when>
			<when test='alignTitle.equals("가입일") and alignStatus=="1"'>
			order by enroll_date desc)n)
			</when>
		</choose>
		where rnum between #{start} and #{end}
	</select>
	<select id="selectExcelList" parameterType="String" resultType="member">
	select member_no as memberNo,
			member_id as memberId,
			member_pw as memberPw,
			member_name as memberName,
			member_email as memberEmail,
			member_phone as memberPhone,
			enroll_date as enrollDate,
			member_nickname as memberNickname
			
		from member where member_id = #{memberId}
	</select>
	<delete id="adminDeleteMember" parameterType="String">
		delete from member where member_id=#{memberId}
	</delete>
	<select id="selectMemberOne" parameterType="string" resultType="member">
	select member_no as memberNo,
			member_id as memberId,
			member_pw as memberPw,
			member_name as memberName,
			member_email as memberEmail,
			member_phone as memberPhone,
			enroll_date as enrollDate,
			member_nickname as memberNickname
			
		from member where member_id = #{memberId} and member_pw = #{memberPw}
	</select>
	<select id="selectIdMember" parameterType="member" resultType="member">
		select member_id as memberId from member where member_id = #{memberId} and member_email = #{memberEmail}
	</select>
	<select id="memberDelayChk" parameterType="member" resultType="_int">
		select delay_status as dalayStatus
		from member
		where member_id = #{memberId}
	</select>
	
</mapper>
