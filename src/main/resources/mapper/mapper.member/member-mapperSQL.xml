<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="member">
	<select id="joinSuccess" parameterType="member">
		insert into member values(member_seq.nextval,#{memberId},#{memberPw},#{memberName},#{memberEmail}
		,#{memberPhone},#{memberCategory1},#{memberCategory2},#{memberCategory3}
		,0,0,sysdate,#{memberNickname})
	</select>
	
	<select id="checkId" parameterType="string" resultType="member">
		select member_id as memberId from member where member_id =#{_parameter}
	</select>
	
	<select id="checkNickname" parameterType="string" resultType="member">
		select member_nickname as memberNickname from member where member_nickname =#{_parameter}
	</select>
	
	<select id="selectOneMember" parameterType="member"	resultType="member">
		select
		member_no as memberNo,
		member_id as memberId,
		member_pw as memberPw,
		member_name as memberName,
		member_email as memberEmail,
		member_phone as memberPhone,
		member_category1 as memberCategory1,
		member_category2 as memberCategory2,
		member_category3 as memberCategory3,
		delay_status as delayStatus,
		complain_status as complainStatus,
		member_nickname as memberNickname,
		enroll_date as enrollDate
		from member
		where member_id=#{memberId}
		and member_pw=#{memberPw}
	</select>
	
	<update id="update" parameterType="member">
		update 
		member set 
		member_name =#{memberName},
		member_nickname =#{memberNickname},
		member_phone =#{memberPhone},
		member_email =#{memberEmail},
		member_category1=#{memberCategory1},
		member_category2=#{memberCategory2},
		member_category3=#{memberCategory3}
		where member_id=#{memberId}
	</update>
	<delete id="delete" parameterType="String">
		delete from member where member_id = #{memberId}
	</delete>
	<select id="selectMemberTotalCount" parameterType="map" resultType="_int">	
	select count(*) as cnt from member where
		<if test = "selectColumn.equals('member_id')">
			member_id like '%' || #{search} || '%'
		</if>
		<if test = "selectColumn.equals('member_name')">
			member_name like '%' || #{search} || '%'
		</if>
		<if test = "selectColumn.equals('member_email')">
			member_email like '%' || #{search} || '%'
		</if>
		<if test = "selectColumn.equals('member_nickname')">
			member_nickname like '%' || #{search} || '%'
		</if>
	</select>
	<select id="memberTotalCount" resultType="_int">
		select count(*) as cnt from member
	</select>
	<select id="selectMember" resultType="member">
		select * from 
			(select rownum as rnum, n.* from
				(select
			member_no as memberNo,
			member_id as memberId,
			member_pw as memberPw,
			member_name as memberName,
			member_email as memberEmail,
			member_phone as memberPhone,
			enroll_date as enrollDate,
			member_nickname as memberNickname
		from member order by member_no desc)n)
		where rnum between #{start} and #{end}
	</select>
	<select id="selectMemberList" parameterType="map" resultType="member">
		select * from 
			(select rownum as rnum, n.* from
				(select
			member_no as memberNo,
			member_id as memberId,
			member_pw as memberPw,
			member_name as memberName,
			member_email as memberEmail,
			member_phone as memberPhone,
			enroll_date as enrollDate,
			member_nickname as memberNickname
		from member where
		<if test = "selectColumn.equals('member_id')">
			member_id like '%' || #{search} || '%'
		</if>
		<if test = "selectColumn.equals('member_name')">
			member_name like '%' || #{search} || '%'
		</if>
		<if test = "selectColumn.equals('member_email')">
			member_email like '%' || #{search} || '%'
		</if>
		<if test = "selectColumn.equals('member_nickname')">
			member_nickname like '%' || #{search} || '%'
		</if>
		order by member_no desc)n)
		where rnum between #{start} and #{end}
	</select>
	<select id="selectExcelList" parameterType="String" resultType="member">
	select member_no as memberNo,
			member_id as memberId,
			member_pw as memberPw,
			member_name as memberName,
			member_email as memberEmail,
			member_phone as memberPhone,
			enroll_date as enrollDate,
			member_nickname as memberNickname
			
		from member where member_id = #{memberId}
	</select>
	<delete id="adminDeleteMember" parameterType="String">
		delete from member where member_id=#{memberId}
	</delete>
	<select id="selectMemberOne" parameterType="string" resultType="member">
	select member_no as memberNo,
			member_id as memberId,
			member_pw as memberPw,
			member_name as memberName,
			member_email as memberEmail,
			member_phone as memberPhone,
			enroll_date as enrollDate,
			member_nickname as memberNickname
			
		from member where member_id = #{memberId} and member_pw = #{memberPw}
	</select>
	
</mapper>
